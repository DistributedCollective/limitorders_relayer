/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SettlementProxy,
  SettlementProxyInterface,
} from "../SettlementProxy";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_oldImplementation",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_newImplementation",
        type: "address",
      },
    ],
    name: "ImplementationChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_oldOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR1",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR2",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RBTC_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UNLIMITED_ALLOWANCE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WRBTC_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "canceledOfHash",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "filledAmountInOfHash",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getImplementation",
    outputs: [
      {
        internalType: "address",
        name: "_implementation",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProxyOwner",
    outputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minMarginOrderSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minMarginOrderTxFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minSwapOrderSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minSwapOrderTxFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "orderBookAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "orderBookMarginAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceFeeds",
    outputs: [
      {
        internalType: "contract IPriceFeeds",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "relayerFeePercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_implementation",
        type: "address",
      },
    ],
    name: "setImplementation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "setProxyOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sovrynSwapNetwork",
    outputs: [
      {
        internalType: "contract ISovrynSwapNetwork",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405260001960095534801561001657600080fd5b506000610021610071565b6000805462010000600160b01b031916620100006001600160a01b03841690810291909117825560405192935091600080516020610b67833981519152908290a35061006c33610075565b610114565b3390565b6001600160a01b0381166100ba5760405162461bcd60e51b8152600401808060200182810382526025815260200180610b876025913960400191505060405180910390fd5b6001600160a01b0381166100cc610101565b6001600160a01b0316600080516020610b6783398151915260405160405180910390a3600080516020610b4783398151915255565b600080516020610b478339815191525490565b610a24806101236000396000f3fe60806040526004361061014e5760003560e01c80638f32d59b116100b6578063caaee91c1161006f578063caaee91c1461037b578063d784d426146103ae578063e2517aea146103e1578063ef1774a2146103f6578063ef87966c1461040b578063f2fde38b146104205761016f565b80638f32d59b146102d457806391ae715e146102fd5780639409d87014610312578063a329b3e814610327578063aaf10f421461033c578063c276d7e2146103515761016f565b806370a082311161010857806370a082311461023857806378d849ed1461026b57806379eaf6d4146102805780637a25914c14610295578063841f375e146102aa5780638da5cb5b146102bf5761016f565b8062c5ddfb146101775780631191ee70146101a85780631ab7710d146101cf57806334093126146101e457806362bcab05146101f9578063685f93bd1461020e5761016f565b3661016f576008546001600160a01b0316331461016d5761016d610453565b005b61016d610453565b34801561018357600080fd5b5061018c6104c9565b604080516001600160a01b039092168252519081900360200190f35b3480156101b457600080fd5b506101bd6104d8565b60408051918252519081900360200190f35b3480156101db57600080fd5b5061018c6104de565b3480156101f057600080fd5b506101bd610503565b34801561020557600080fd5b506101bd610509565b34801561021a57600080fd5b506101bd6004803603602081101561023157600080fd5b503561050f565b34801561024457600080fd5b506101bd6004803603602081101561025b57600080fd5b50356001600160a01b0316610521565b34801561027757600080fd5b5061018c610533565b34801561028c57600080fd5b5061018c610542565b3480156102a157600080fd5b506101bd610551565b3480156102b657600080fd5b5061018c610557565b3480156102cb57600080fd5b5061018c610566565b3480156102e057600080fd5b506102e961057b565b604080519115158252519081900360200190f35b34801561030957600080fd5b506101bd6105a5565b34801561031e57600080fd5b5061018c6105ab565b34801561033357600080fd5b506101bd6105ba565b34801561034857600080fd5b5061018c6105c0565b34801561035d57600080fd5b506102e96004803603602081101561037457600080fd5b50356105e5565b34801561038757600080fd5b5061016d6004803603602081101561039e57600080fd5b50356001600160a01b03166105fa565b3480156103ba57600080fd5b5061016d600480360360208110156103d157600080fd5b50356001600160a01b031661066b565b3480156103ed57600080fd5b5061018c6106d9565b34801561040257600080fd5b506101bd6106e8565b34801561041757600080fd5b506101bd6106ee565b34801561042c57600080fd5b5061016d6004803603602081101561044357600080fd5b50356001600160a01b03166106f4565b600061045d6105c0565b90506001600160a01b0381166104a45760405162461bcd60e51b81526004018080602001828103825260238152602001806109a76023913960400191505060405180910390fd5b60405136600082376000803683855af43d806000843e8180156104c5578184f35b8184fd5b600d546001600160a01b031681565b60105481565b7fb5f6074d2b374487ffe12d401cf0891c7591a84c4944ef117f69d13b80c4d6d85490565b60025481565b60125481565b60056020526000908152604090205481565b60066020526000908152604090205481565b600b546001600160a01b031681565b600a546001600160a01b031681565b60015481565b6008546001600160a01b031681565b6000546201000090046001600160a01b031690565b600080546201000090046001600160a01b0316610596610745565b6001600160a01b031614905090565b60095481565b600c546001600160a01b031681565b600f5481565b7f950d7e977b74051843ed988c77d53a700cd967d2ac5480d98dd4c1edaf0b4dc85490565b60046020526000908152604090205460ff1681565b6106026104de565b6001600160a01b0316336001600160a01b03161461065f576040805162461bcd60e51b8152602060048201526015602482015274141c9bde1e4e8e881858d8d95cdcc819195b9a5959605a1b604482015290519081900360640190fd5b61066881610749565b50565b6106736104de565b6001600160a01b0316336001600160a01b0316146106d0576040805162461bcd60e51b8152602060048201526015602482015274141c9bde1e4e8e881858d8d95cdcc819195b9a5959605a1b604482015290519081900360640190fd5b610668816107f9565b6007546001600160a01b031681565b600e5481565b60115481565b6106fc61057b565b61073c576040805162461bcd60e51b815260206004820152600c60248201526b1d5b985d5d1a1bdc9a5e995960a21b604482015290519081900360640190fd5b610668816108a9565b3390565b6001600160a01b03811661078e5760405162461bcd60e51b81526004018080602001828103825260258152602001806109ca6025913960400191505060405180910390fd5b806001600160a01b03166107a06104de565b6001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a37fb5f6074d2b374487ffe12d401cf0891c7591a84c4944ef117f69d13b80c4d6d855565b6001600160a01b03811661083e5760405162461bcd60e51b815260040180806020018281038252602981526020018061097e6029913960400191505060405180910390fd5b806001600160a01b03166108506105c0565b6001600160a01b03167fcfbf4028add9318bbf716f08c348595afb063b0e9feed1f86d33681a4b3ed4d360405160405180910390a37f950d7e977b74051843ed988c77d53a700cd967d2ac5480d98dd4c1edaf0b4dc855565b6001600160a01b0381166108ee5760405162461bcd60e51b81526004018080602001828103825260268152602001806109586026913960400191505060405180910390fd5b600080546040516001600160a01b03808516936201000090930416917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b03909216620100000262010000600160b01b031990921691909117905556fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737350726f78793a3a736574496d706c656d656e746174696f6e3a20696e76616c6964206164647265737350726f78793a3a28293a20696d706c656d656e746174696f6e206e6f7420666f756e6450726f78793a3a73657450726f78794f776e65723a20696e76616c69642061646472657373a26469706673582212204d3ddd92ce7ee9121ee71491764bc9354be3e7f7cba76562e104fa89e545494764736f6c634300060c0033b5f6074d2b374487ffe12d401cf0891c7591a84c4944ef117f69d13b80c4d6d88be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e050726f78793a3a73657450726f78794f776e65723a20696e76616c69642061646472657373";

export class SettlementProxy__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SettlementProxy> {
    return super.deploy(overrides || {}) as Promise<SettlementProxy>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SettlementProxy {
    return super.attach(address) as SettlementProxy;
  }
  connect(signer: Signer): SettlementProxy__factory {
    return super.connect(signer) as SettlementProxy__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SettlementProxyInterface {
    return new utils.Interface(_abi) as SettlementProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SettlementProxy {
    return new Contract(address, _abi, signerOrProvider) as SettlementProxy;
  }
}
