/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SettlementProxy,
  SettlementProxyInterface,
} from "../SettlementProxy";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_oldImplementation",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_newImplementation",
        type: "address",
      },
    ],
    name: "ImplementationChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_oldOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR1",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR2",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RBTC_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WRBTC_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "canceledOfHash",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "filledAmountInOfHash",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getImplementation",
    outputs: [
      {
        internalType: "address",
        name: "_implementation",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProxyOwner",
    outputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minMarginOrderSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minMarginOrderTxFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minSwapOrderSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minSwapOrderTxFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "orderBookAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "orderBookMarginAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "relayerFeePercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_implementation",
        type: "address",
      },
    ],
    name: "setImplementation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "setProxyOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sovrynSwapNetwork",
    outputs: [
      {
        internalType: "contract ISovrynSwapNetwork",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600061001b61006b565b6000805462010000600160b01b031916620100006001600160a01b03841690810291909117825560405192935091600080516020610b0c833981519152908290a3506100663361006f565b61010e565b3390565b6001600160a01b0381166100b45760405162461bcd60e51b8152600401808060200182810382526025815260200180610b2c6025913960400191505060405180910390fd5b6001600160a01b0381166100c66100fb565b6001600160a01b0316600080516020610b0c83398151915260405160405180910390a3600080516020610aec83398151915255565b600080516020610aec8339815191525490565b6109cf8061011d6000396000f3fe6080604052600436106101385760003560e01c80638f32d59b116100ab578063caaee91c1161006f578063caaee91c1461033b578063d784d4261461036e578063e2517aea146103a1578063ef1774a2146103b6578063ef87966c146103cb578063f2fde38b146103e057610159565b80638f32d59b146102a95780639409d870146102d2578063a329b3e8146102e7578063aaf10f42146102fc578063c276d7e21461031157610159565b8063685f93bd116100fd578063685f93bd146101f857806370a082311461022257806379eaf6d4146102555780637a25914c1461026a578063841f375e1461027f5780638da5cb5b1461029457610159565b8062c5ddfb146101615780631191ee70146101925780631ab7710d146101b957806334093126146101ce57806362bcab05146101e357610159565b36610159576008546001600160a01b0316331461015757610157610413565b005b610157610413565b34801561016d57600080fd5b50610176610489565b604080516001600160a01b039092168252519081900360200190f35b34801561019e57600080fd5b506101a7610498565b60408051918252519081900360200190f35b3480156101c557600080fd5b5061017661049e565b3480156101da57600080fd5b506101a76104c3565b3480156101ef57600080fd5b506101a76104c9565b34801561020457600080fd5b506101a76004803603602081101561021b57600080fd5b50356104cf565b34801561022e57600080fd5b506101a76004803603602081101561024557600080fd5b50356001600160a01b03166104e1565b34801561026157600080fd5b506101766104f3565b34801561027657600080fd5b506101a7610502565b34801561028b57600080fd5b50610176610508565b3480156102a057600080fd5b50610176610517565b3480156102b557600080fd5b506102be61052c565b604080519115158252519081900360200190f35b3480156102de57600080fd5b50610176610556565b3480156102f357600080fd5b506101a7610565565b34801561030857600080fd5b5061017661056b565b34801561031d57600080fd5b506102be6004803603602081101561033457600080fd5b5035610590565b34801561034757600080fd5b506101576004803603602081101561035e57600080fd5b50356001600160a01b03166105a5565b34801561037a57600080fd5b506101576004803603602081101561039157600080fd5b50356001600160a01b0316610616565b3480156103ad57600080fd5b50610176610684565b3480156103c257600080fd5b506101a7610693565b3480156103d757600080fd5b506101a7610699565b3480156103ec57600080fd5b506101576004803603602081101561040357600080fd5b50356001600160a01b031661069f565b600061041d61056b565b90506001600160a01b0381166104645760405162461bcd60e51b81526004018080602001828103825260238152602001806109526023913960400191505060405180910390fd5b60405136600082376000803683855af43d806000843e818015610485578184f35b8184fd5b600b546001600160a01b031681565b600e5481565b7fb5f6074d2b374487ffe12d401cf0891c7591a84c4944ef117f69d13b80c4d6d85490565b60025481565b60105481565b60056020526000908152604090205481565b60066020526000908152604090205481565b6009546001600160a01b031681565b60015481565b6008546001600160a01b031681565b6000546201000090046001600160a01b031690565b600080546201000090046001600160a01b03166105476106f0565b6001600160a01b031614905090565b600a546001600160a01b031681565b600d5481565b7f950d7e977b74051843ed988c77d53a700cd967d2ac5480d98dd4c1edaf0b4dc85490565b60046020526000908152604090205460ff1681565b6105ad61049e565b6001600160a01b0316336001600160a01b03161461060a576040805162461bcd60e51b8152602060048201526015602482015274141c9bde1e4e8e881858d8d95cdcc819195b9a5959605a1b604482015290519081900360640190fd5b610613816106f4565b50565b61061e61049e565b6001600160a01b0316336001600160a01b03161461067b576040805162461bcd60e51b8152602060048201526015602482015274141c9bde1e4e8e881858d8d95cdcc819195b9a5959605a1b604482015290519081900360640190fd5b610613816107a4565b6007546001600160a01b031681565b600c5481565b600f5481565b6106a761052c565b6106e7576040805162461bcd60e51b815260206004820152600c60248201526b1d5b985d5d1a1bdc9a5e995960a21b604482015290519081900360640190fd5b61061381610854565b3390565b6001600160a01b0381166107395760405162461bcd60e51b81526004018080602001828103825260258152602001806109756025913960400191505060405180910390fd5b806001600160a01b031661074b61049e565b6001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a37fb5f6074d2b374487ffe12d401cf0891c7591a84c4944ef117f69d13b80c4d6d855565b6001600160a01b0381166107e95760405162461bcd60e51b81526004018080602001828103825260298152602001806109296029913960400191505060405180910390fd5b806001600160a01b03166107fb61056b565b6001600160a01b03167fcfbf4028add9318bbf716f08c348595afb063b0e9feed1f86d33681a4b3ed4d360405160405180910390a37f950d7e977b74051843ed988c77d53a700cd967d2ac5480d98dd4c1edaf0b4dc855565b6001600160a01b0381166108995760405162461bcd60e51b81526004018080602001828103825260268152602001806109036026913960400191505060405180910390fd5b600080546040516001600160a01b03808516936201000090930416917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b03909216620100000262010000600160b01b031990921691909117905556fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737350726f78793a3a736574496d706c656d656e746174696f6e3a20696e76616c6964206164647265737350726f78793a3a28293a20696d706c656d656e746174696f6e206e6f7420666f756e6450726f78793a3a73657450726f78794f776e65723a20696e76616c69642061646472657373a2646970667358221220eb9c8bc8733f0924830748c59171bbe01c7131253d8a81e116dcdab889850c2964736f6c634300060c0033b5f6074d2b374487ffe12d401cf0891c7591a84c4944ef117f69d13b80c4d6d88be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e050726f78793a3a73657450726f78794f776e65723a20696e76616c69642061646472657373";

export class SettlementProxy__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SettlementProxy> {
    return super.deploy(overrides || {}) as Promise<SettlementProxy>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SettlementProxy {
    return super.attach(address) as SettlementProxy;
  }
  connect(signer: Signer): SettlementProxy__factory {
    return super.connect(signer) as SettlementProxy__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SettlementProxyInterface {
    return new utils.Interface(_abi) as SettlementProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SettlementProxy {
    return new Contract(address, _abi, signerOrProvider) as SettlementProxy;
  }
}
